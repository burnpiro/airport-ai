[{"/home/piro/Documents/projects/airport-ai/web/src/reportWebVitals.js":"1","/home/piro/Documents/projects/airport-ai/web/src/index.js":"2","/home/piro/Documents/projects/airport-ai/web/src/Layout/menuItems.js":"3","/home/piro/Documents/projects/airport-ai/web/src/Layout/Layout.js":"4","/home/piro/Documents/projects/airport-ai/web/src/Simulation/Simulation.js":"5","/home/piro/Documents/projects/airport-ai/web/src/App/App.js":"6","/home/piro/Documents/projects/airport-ai/web/src/hooks/useScrollZoom.js":"7"},{"size":362,"mtime":1606741866391,"results":"8","hashOfConfig":"9"},{"size":504,"mtime":1606942008903,"results":"10","hashOfConfig":"9"},{"size":1716,"mtime":1606835454537,"results":"11","hashOfConfig":"9"},{"size":5131,"mtime":1607011390042,"results":"12","hashOfConfig":"9"},{"size":1231,"mtime":1607029762492,"results":"13","hashOfConfig":"9"},{"size":230,"mtime":1607009991409,"results":"14","hashOfConfig":"9"},{"size":1615,"mtime":1607029641713,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6n29ac",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/piro/Documents/projects/airport-ai/web/src/reportWebVitals.js",[],"/home/piro/Documents/projects/airport-ai/web/src/index.js",[],"/home/piro/Documents/projects/airport-ai/web/src/Layout/menuItems.js",[],"/home/piro/Documents/projects/airport-ai/web/src/Layout/Layout.js",["31","32","33"],"import {useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './menuItems';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/burnpiro\">\n        K. Erdem\n      </Link>{', '}\n      <Link color=\"inherit\" href=\"https://github.com/MarekPokropinski\">\n        M. Pokropiński\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    // paddingTop: theme.spacing(4),\n    // paddingBottom: theme.spacing(4),\n    maxWidth: '100%',\n    maxHeight: `calc(100% - 128px)`,\n    height: `calc(100% - 128px)`,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard({children}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Airport AI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container className={classes.container}>\n          { children }\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}","/home/piro/Documents/projects/airport-ai/web/src/Simulation/Simulation.js",[],"/home/piro/Documents/projects/airport-ai/web/src/App/App.js",[],"/home/piro/Documents/projects/airport-ai/web/src/hooks/useScrollZoom.js",[],{"ruleId":"34","severity":1,"message":"35","line":13,"column":8,"nodeType":"36","messageId":"37","endLine":13,"endColumn":13},{"ruleId":"34","severity":1,"message":"38","line":18,"column":8,"nodeType":"36","messageId":"37","endLine":18,"endColumn":25},{"ruleId":"34","severity":1,"message":"39","line":130,"column":9,"nodeType":"36","messageId":"37","endLine":130,"endColumn":25},"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'NotificationsIcon' is defined but never used.","'fixedHeightPaper' is assigned a value but never used."]